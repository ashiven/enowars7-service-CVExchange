<div class="post-container">
<% for (let [index, post] of posts.entries()) { %>
  <div class="post">
    <span class="rank"> <%= (page - 1)*pagelimit + index + 1 %> </span>
    <div class="voting-section">
      <% if(req.cookies.jwtToken) { %>
      <div class="upvote <%= ratings.some(r => r.post_id === post.id && r.rating === 1) ? 'on' : '' %>" data-postid="<%= post.id %>">
      <% } else { %>
      <div class="upvote" data-postid="<%= post.id %>">
      <% } %>
        <svg xmlns="http://www.w3.org/2000/svg" class="icon icon-tabler icon-tabler-arrow-big-up-filled" width="28" height="28" viewBox="0 0 24 24" stroke-width="1.5" stroke="#2c3e50" fill="none" stroke-linecap="round" stroke-linejoin="round">
          <path stroke="none" d="M0 0h24v24H0z" fill="none"/>
          <path d="M10.586 3l-6.586 6.586a2 2 0 0 0 -.434 2.18l.068 .145a2 2 0 0 0 1.78 1.089h2.586v7a2 2 0 0 0 2 2h4l.15 -.005a2 2 0 0 0 1.85 -1.995l-.001 -7h2.587a2 2 0 0 0 1.414 -3.414l-6.586 -6.586a2 2 0 0 0 -2.828 0z" stroke-width="0" fill="currentColor" />
        </svg>
      </div>
      <div class="score"> <%= post.rating %> </div>
      <% if(req.cookies.jwtToken) { %>
      <div class="downvote <%= ratings.some(r => r.post_id === post.id && r.rating === -1) ? 'on' : '' %>" data-postid="<%= post.id %>">
      <% } else { %>
      <div class="downvote" data-postid="<%= post.id %>">
      <% } %>
        <svg xmlns="http://www.w3.org/2000/svg" class="icon icon-tabler icon-tabler-arrow-big-down-filled" width="28" height="28" viewBox="0 0 24 24" stroke-width="1.5" stroke="#2c3e50" fill="none" stroke-linecap="round" stroke-linejoin="round">
          <path stroke="none" d="M0 0h24v24H0z" fill="none"/>
          <path d="M10 2l-.15 .005a2 2 0 0 0 -1.85 1.995v6.999l-2.586 .001a2 2 0 0 0 -1.414 3.414l6.586 6.586a2 2 0 0 0 2.828 0l6.586 -6.586a2 2 0 0 0 .434 -2.18l-.068 -.145a2 2 0 0 0 -1.78 -1.089l-2.586 -.001v-6.999a2 2 0 0 0 -2 -2h-4z" stroke-width="0" fill="currentColor" />
        </svg>
      </div>
    </div>
    <a href="/posts/<%= post.id %>">
      <svg xmlns="http://www.w3.org/2000/svg" class="icon icon-tabler icon-tabler-article" width="52" height="52" viewBox="0 0 24 24" stroke-width="1.5" stroke="#9e9e9e" fill="none" stroke-linecap="round" stroke-linejoin="round">
        <path stroke="none" d="M0 0h24v24H0z" fill="none"/>
        <path d="M3 4m0 2a2 2 0 0 1 2 -2h14a2 2 0 0 1 2 2v12a2 2 0 0 1 -2 2h-14a2 2 0 0 1 -2 -2z" />
        <path d="M7 8h10" />
        <path d="M7 12h10" />
        <path d="M7 16h10" />
      </svg>
    </a>
    <div class="post-body">
      <p class="post-title"> <a class="title-link login-required" href="/posts/<%= post.id %>"><%= post.title %></a> </p>
      <p class="post-tags">submitted
        <time datetime="<%= post.datetime %>" class="timestamp"><%= timeSince(post.datetime) %> ago</time> by 
        <a href="/user/profile/<%= post.creator_id %>" class="author login-required"><%= post.creator_name %></a>
        <% if(!locals.sub) { %>
        to <a href="/subs/<%= post.sub_id %>" class="author login-required">c/<%= post.sub_name %></a>
        <% } %>
      </p>
      <ul class="post-buttons">
        <li class="comments"><a class="login-required" href="/posts/<%= post.id %>"><%= comments.filter(c => c.post_id === post.id).length %> comments</a></li>
        <li class="save-button"><a class="login-required" href="/posts/save/<%= post.id %>">save</a></li>
        <% if(req.cookies.jwtToken) { %>
        <% if(parseInt(req.userId) === parseInt(post.creator_id)) { %>
        <li class="edit-button"><a class="login-required" href="/posts/delete/<%= post.id %>">delete</a></li>
        <li class="delete-button"><a class="login-required" href="/posts/edit/<%= post.id %>">edit</a></li>
        <% } %>
        <% } %>
      </ul> 
    </div>
  </div>
<% } %>
  <div>
    <% if(page > 1 ) { %>
    <button class="uploadbutton" onclick="window.location.href='/?sort=<%= sort %>&page=<%= page - 1 %>'">prev</button>
    <% } %>
    <% if(posts.length === pagelimit) { %>
    <button class="uploadbutton" onclick="window.location.href='/?sort=<%= sort %>&page=<%= page + 1 %>'">next</button>
    <% } %>
  </div>
</div>


<% function timeSince(date) {
  var seconds = Math.floor((new Date() - date) / 1000)
  var interval = seconds / 31536000

  if (interval > 1) {
      if (interval < 2) {
          return Math.floor(interval) + " year"
      }
      return Math.floor(interval) + " years"
  }

  interval = seconds / 2592000
  if (interval > 1) {
      if (interval < 2) {
          return Math.floor(interval) + " month"
      }
      return Math.floor(interval) + " months"
  }

  interval = seconds / 86400
  if (interval > 1) {
      if (interval < 2) {
          return Math.floor(interval) + " day"
      }
      return Math.floor(interval) + " days"
  }

  interval = seconds / 3600
  if (interval > 1) {
      if (interval < 2) {
          return Math.floor(interval) + " hour"
      }
      return Math.floor(interval) + " hours"
  }

  interval = seconds / 60
  if (interval > 1) {
      if (interval < 2) {
          return Math.floor(interval) + " minute"
      }
      return Math.floor(interval) + " minutes"
  }

  return Math.floor(seconds) + " seconds"
} %>


<script>
for(const btn of document.querySelectorAll('.upvote')) {
    btn.addEventListener('click', async (event) => {
        event.currentTarget.classList.toggle('on')
        const postId = btn.getAttribute('data-postid')
        await fetch('/votes/ratepost', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json'
            },
            body: JSON.stringify({
                postId: postId,
                rating: 1
            })
        })
        location.reload()
    })
}
for(const btn of document.querySelectorAll('.downvote')) {
    btn.addEventListener('click', async (event) => {
        event.currentTarget.classList.toggle('on')
        const postId = btn.getAttribute('data-postid')
        await fetch('/votes/ratepost', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json'
            },
            body: JSON.stringify({
                postId: postId,
                rating: -1
            })
        })
        location.reload()
    })
}
</script>


