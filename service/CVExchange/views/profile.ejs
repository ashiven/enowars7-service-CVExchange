<% if(tab === 'overview') { %>

<div>
    <%  
    const firstIndex = (page - 1) * pagelimit
    const lastIndex = firstIndex + pagelimit - 1
    const elements = [...posts, ...comments].sort((a, b) => new Date(b.datetime) - new Date(a.datetime))

    for (let i = firstIndex; i <= lastIndex && i < elements.length; i++ ) { 
        const element = elements[i]
    %>
    <% if(element.title) { %>
        <div class="post">
            <div class="voting-section">
                <div class="upvote <%= ratings.some(r => r.post_id === element.id && r.rating === 1) ? 'on' : '' %>" data-postid="<%= element.id %>">
                    <svg xmlns="http://www.w3.org/2000/svg" class="icon icon-tabler icon-tabler-arrow-big-up-filled" width="28" height="28" viewBox="0 0 24 24" stroke-width="1.5" stroke="#2c3e50" fill="none" stroke-linecap="round" stroke-linejoin="round">
                    <path stroke="none" d="M0 0h24v24H0z" fill="none"/>
                    <path d="M10.586 3l-6.586 6.586a2 2 0 0 0 -.434 2.18l.068 .145a2 2 0 0 0 1.78 1.089h2.586v7a2 2 0 0 0 2 2h4l.15 -.005a2 2 0 0 0 1.85 -1.995l-.001 -7h2.587a2 2 0 0 0 1.414 -3.414l-6.586 -6.586a2 2 0 0 0 -2.828 0z" stroke-width="0" fill="currentColor" />
                    </svg>
                </div>
                <div class="score"> <%= element.rating %> </div>
                <div class="downvote <%= ratings.some(r => r.post_id === element.id && r.rating === -1) ? 'on' : '' %>" data-postid="<%= element.id %>">
                    <svg xmlns="http://www.w3.org/2000/svg" class="icon icon-tabler icon-tabler-arrow-big-down-filled" width="28" height="28" viewBox="0 0 24 24" stroke-width="1.5" stroke="#2c3e50" fill="none" stroke-linecap="round" stroke-linejoin="round">
                    <path stroke="none" d="M0 0h24v24H0z" fill="none"/>
                    <path d="M10 2l-.15 .005a2 2 0 0 0 -1.85 1.995v6.999l-2.586 .001a2 2 0 0 0 -1.414 3.414l6.586 6.586a2 2 0 0 0 2.828 0l6.586 -6.586a2 2 0 0 0 .434 -2.18l-.068 -.145a2 2 0 0 0 -1.78 -1.089l-2.586 -.001v-6.999a2 2 0 0 0 -2 -2h-4z" stroke-width="0" fill="currentColor" />
                    </svg>
                </div>
            </div>
            <a href="/posts/<%= element.id %>">
                <svg xmlns="http://www.w3.org/2000/svg" class="icon icon-tabler icon-tabler-article" width="52" height="52" viewBox="0 0 24 24" stroke-width="1.5" stroke="#9e9e9e" fill="none" stroke-linecap="round" stroke-linejoin="round">
                <path stroke="none" d="M0 0h24v24H0z" fill="none"/>
                <path d="M3 4m0 2a2 2 0 0 1 2 -2h14a2 2 0 0 1 2 2v12a2 2 0 0 1 -2 2h-14a2 2 0 0 1 -2 -2z" />
                <path d="M7 8h10" />
                <path d="M7 12h10" />
                <path d="M7 16h10" />
                </svg>
            </a>
            <div class="post-body">
                <p class="post-title"> <a class="title-link login-required" href="/posts/<%= element.id %>"><%= element.title %></a> </p>
                <p class="post-tags">submitted
                    <time datetime="<%= element.datetime %>" class="timestamp"><%= timeSince(element.datetime) %> ago</time> by 
                    <a href="/user/profile/<%= element.creator_id %>" class="author login-required"><%= element.creator_name %></a> to
                    <a href="/subs/<%= element.sub_id %>" class="author login-required">c/<%= element.sub_name %></a>
                </p>
                <ul class="post-buttons">
                    <li class="comments"><a class="login-required" href="/posts/<%= element.id %>"><%= comments.filter(c => c.post_id === element.id).length %> comments</a></li>
                    <li class="save-button"><a class="login-required" href="/posts/save/<%= element.id %>">save</a></li>
                    <% if(parseInt(req.userId) === parseInt(req.params.id)) { %>
                    <li class="edit-button"><a class="login-required" href="/posts/delete/<%= element.id %>">delete</a></li>
                    <li class="delete-button"><a class="login-required" href="/posts/edit/<%= element.id %>">edit</a></li>
                    <% } %>
                </ul>
            </div>
        </div>
    <% } else { %>
        <div class="comment-outer">
            <p class="comment-post-title"> 
                <a class="title-link login-required" href="/posts/<%= element.post_id %>"><%= commentPosts.find(post => post.id === element.post_id).title %></a>&nbsp;
                <span class="comment-post-title-link"> by
                <a href="/user/profile/<%= commentPosts.find(post => post.id === element.post_id).creator_id %>" class="author login-required"> <%= commentPosts.find(post => post.id === element.post_id).creator_name %> </a> 
                </span>
            </p>
            <div class="comment">
                <div class="voting-section">
                    <div class="upvote-comment <%= ratings.some(r => r.comment_id === element.id && r.rating === 1) ? 'on' : '' %>" data-commentid="<%= element.id %>">
                        <svg xmlns="http://www.w3.org/2000/svg" class="icon icon-tabler icon-tabler-arrow-big-up-filled" width="28" height="28" viewBox="0 0 24 24" stroke-width="1.5" stroke="#2c3e50" fill="none" stroke-linecap="round" stroke-linejoin="round">
                        <path stroke="none" d="M0 0h24v24H0z" fill="none"/>
                        <path d="M10.586 3l-6.586 6.586a2 2 0 0 0 -.434 2.18l.068 .145a2 2 0 0 0 1.78 1.089h2.586v7a2 2 0 0 0 2 2h4l.15 -.005a2 2 0 0 0 1.85 -1.995l-.001 -7h2.587a2 2 0 0 0 1.414 -3.414l-6.586 -6.586a2 2 0 0 0 -2.828 0z" stroke-width="0" fill="currentColor" />
                        </svg>
                    </div>
                    <div class="downvote-comment <%= ratings.some(r => r.comment_id === element.id && r.rating === -1) ? 'on' : '' %>" data-commentid="<%= element.id %>">
                        <svg xmlns="http://www.w3.org/2000/svg" class="icon icon-tabler icon-tabler-arrow-big-down-filled" width="28" height="28" viewBox="0 0 24 24" stroke-width="1.5" stroke="#2c3e50" fill="none" stroke-linecap="round" stroke-linejoin="round">
                        <path stroke="none" d="M0 0h24v24H0z" fill="none"/>
                        <path d="M10 2l-.15 .005a2 2 0 0 0 -1.85 1.995v6.999l-2.586 .001a2 2 0 0 0 -1.414 3.414l6.586 6.586a2 2 0 0 0 2.828 0l6.586 -6.586a2 2 0 0 0 .434 -2.18l-.068 -.145a2 2 0 0 0 -1.78 -1.089l-2.586 -.001v-6.999a2 2 0 0 0 -2 -2h-4z" stroke-width="0" fill="currentColor" />
                        </svg>
                    </div>
                </div>

                <div class="comment-body">
                    <div class="comment-title">
                        <a href="/user/profile/<%= element.creator_id %>" class=""><%= element.creator_name %> </a>&nbsp;
                        <span class="comment-score"><%= element.rating %> <%= Math.abs(parseInt(element.rating)) === 1 ? 'point' : 'points' %></span>&nbsp;
                        <time datetime="<%= element.datetime %>" class="timestamp"><%= timeSince(element.datetime) %> ago</time>
                    </div>
                    <div class="comment-text" id="comment-text-<%= element.id %>">
                        <%= element.text %>
                    </div>
                    <form class="comment-edit-textarea" id="comment-edit-<%= element.id %>" style="display: none;" method="post" action="/comments/edit/<%= element.id %>">
                        <input type="hidden" name="postId" value="<%= element.post_id %>">
                        <textarea id="text" name="text" rows="7" cols="85"><%= element.text %></textarea><br>
                        <input class="uploadbutton" type="submit" value="save">
                    </form>
                    <ul class="comment-buttons">
                        <% if(parseInt(req.userId) === parseInt(req.params.id)) { %>
                        <li class="delete-button"><a class="login-required" href="/comments/delete/<%= element.id %>">delete</a></li>
                        <li class="edit-button"><a class="login-required" href="#" onclick="editComment('<%= element.id %>')">edit</a></li>
                        <% } %>
                    </ul>
                </div>
            </div>
        </div>
    <% } %>
    <% } %>
    <div>
    <% if(page > 1 ) { %>
    <button class="uploadbutton" onclick="window.location.href='/user/profile/<%= user.id %>?tab=<%= tab %>&page=<%= parseInt(page) - 1 %>'">prev</button>
    <% } %>
    <% if(lastIndex < elements.length) { %>
    <button class="uploadbutton" onclick="window.location.href='/user/profile/<%= user.id %>?tab=<%= tab %>&page=<%= parseInt(page) + 1 %>'">next</button>
    <% } %>
    </div>
</div>

<% }
else if(tab === 'submitted') { %>

<div>
    <%  
    const firstIndex = (page - 1) * pagelimit
    const lastIndex = firstIndex + pagelimit - 1

    for (let i = firstIndex; i <= lastIndex && i < posts.length; i++ ) { 
        const post = posts[i]
    %>
    <div class="post">
        <div class="voting-section">
            <div class="upvote <%= ratings.some(r => r.post_id === post.id && r.rating === 1) ? 'on' : '' %>" data-postid="<%= post.id %>">
                <svg xmlns="http://www.w3.org/2000/svg" class="icon icon-tabler icon-tabler-arrow-big-up-filled" width="28" height="28" viewBox="0 0 24 24" stroke-width="1.5" stroke="#2c3e50" fill="none" stroke-linecap="round" stroke-linejoin="round">
                <path stroke="none" d="M0 0h24v24H0z" fill="none"/>
                <path d="M10.586 3l-6.586 6.586a2 2 0 0 0 -.434 2.18l.068 .145a2 2 0 0 0 1.78 1.089h2.586v7a2 2 0 0 0 2 2h4l.15 -.005a2 2 0 0 0 1.85 -1.995l-.001 -7h2.587a2 2 0 0 0 1.414 -3.414l-6.586 -6.586a2 2 0 0 0 -2.828 0z" stroke-width="0" fill="currentColor" />
                </svg>
            </div>
            <div class="score"> <%= post.rating %> </div>
            <div class="downvote <%= ratings.some(r => r.post_id === post.id && r.rating === -1) ? 'on' : '' %>" data-postid="<%= post.id %>">
                <svg xmlns="http://www.w3.org/2000/svg" class="icon icon-tabler icon-tabler-arrow-big-down-filled" width="28" height="28" viewBox="0 0 24 24" stroke-width="1.5" stroke="#2c3e50" fill="none" stroke-linecap="round" stroke-linejoin="round">
                <path stroke="none" d="M0 0h24v24H0z" fill="none"/>
                <path d="M10 2l-.15 .005a2 2 0 0 0 -1.85 1.995v6.999l-2.586 .001a2 2 0 0 0 -1.414 3.414l6.586 6.586a2 2 0 0 0 2.828 0l6.586 -6.586a2 2 0 0 0 .434 -2.18l-.068 -.145a2 2 0 0 0 -1.78 -1.089l-2.586 -.001v-6.999a2 2 0 0 0 -2 -2h-4z" stroke-width="0" fill="currentColor" />
                </svg>
            </div>
        </div>
        <a href="/posts/<%= post.id %>">
            <svg xmlns="http://www.w3.org/2000/svg" class="icon icon-tabler icon-tabler-article" width="52" height="52" viewBox="0 0 24 24" stroke-width="1.5" stroke="#9e9e9e" fill="none" stroke-linecap="round" stroke-linejoin="round">
            <path stroke="none" d="M0 0h24v24H0z" fill="none"/>
            <path d="M3 4m0 2a2 2 0 0 1 2 -2h14a2 2 0 0 1 2 2v12a2 2 0 0 1 -2 2h-14a2 2 0 0 1 -2 -2z" />
            <path d="M7 8h10" />
            <path d="M7 12h10" />
            <path d="M7 16h10" />
            </svg>
        </a>
        <div class="post-body">
            <p class="post-title"> <a class="title-link login-required" href="/posts/<%= post.id %>"><%= post.title %></a> </p>
            <p class="post-tags">submitted
                <time datetime="<%= post.datetime %>" class="timestamp"><%= timeSince(post.datetime) %> ago</time> by 
                <a href="/user/profile/<%= post.creator_id %>" class="author login-required"><%= post.creator_name %></a> to
                <a href="/subs/<%= post.sub_id %>" class="author login-required">c/<%= post.sub_name %></a>
            </p>
            <ul class="post-buttons">
                <li class="comments"><a class="login-required" href="/posts/<%= post.id %>"><%= comments.filter(c => c.post_id === post.id).length %> comments</a></li>
                <li class="save-button"><a class="login-required" href="/posts/save/<%= post.id %>">save</a></li>
                <% if(parseInt(req.userId) === parseInt(req.params.id)) { %>
                <li class="edit-button"><a class="login-required" href="/posts/delete/<%= post.id %>">delete</a></li>
                <li class="delete-button"><a class="login-required" href="/posts/edit/<%= post.id %>">edit</a></li>
                <% } %>
            </ul>
        </div>
    </div>
    <% } %>
    <div>
    <% if(page > 1 ) { %>
    <button class="uploadbutton" onclick="window.location.href='/user/profile/<%= user.id %>?tab=<%= tab %>&page=<%= parseInt(page) - 1 %>'">prev</button>
    <% } %>
    <% if(lastIndex < posts.length) { %>
    <button class="uploadbutton" onclick="window.location.href='/user/profile/<%= user.id %>?tab=<%= tab %>&page=<%= parseInt(page) + 1 %>'">next</button>
    <% } %>
    </div>
</div>

<% } 
else if(tab === 'comments') { %>
    
<div>
    <%  
    const firstIndex = (page - 1) * pagelimit
    const lastIndex = firstIndex + pagelimit - 1

    for (let i = firstIndex; i <= lastIndex && i < comments.length; i++ ) { 
        const comment = comments[i]
    %>
    <div class="comment-outer">
        <p class="comment-post-title"> 
            <a class="title-link login-required" href="/posts/<%= comment.post_id %>"><%= commentPosts.find(post => post.id === comment.post_id).title %></a>&nbsp;
            <span class="comment-post-title-link"> by
            <a href="/user/profile/<%= commentPosts.find(post => post.id === comment.post_id).creator_id %>" class="author login-required"> <%= commentPosts.find(post => post.id === comment.post_id).creator_name %> </a> 
            </span>
        </p>
        <div class="comment">
            <div class="voting-section">
                <div class="upvote-comment <%= ratings.some(r => r.comment_id === comment.id && r.rating === 1) ? 'on' : '' %>" data-commentid="<%= comment.id %>">
                    <svg xmlns="http://www.w3.org/2000/svg" class="icon icon-tabler icon-tabler-arrow-big-up-filled" width="28" height="28" viewBox="0 0 24 24" stroke-width="1.5" stroke="#2c3e50" fill="none" stroke-linecap="round" stroke-linejoin="round">
                    <path stroke="none" d="M0 0h24v24H0z" fill="none"/>
                    <path d="M10.586 3l-6.586 6.586a2 2 0 0 0 -.434 2.18l.068 .145a2 2 0 0 0 1.78 1.089h2.586v7a2 2 0 0 0 2 2h4l.15 -.005a2 2 0 0 0 1.85 -1.995l-.001 -7h2.587a2 2 0 0 0 1.414 -3.414l-6.586 -6.586a2 2 0 0 0 -2.828 0z" stroke-width="0" fill="currentColor" />
                    </svg>
                </div>
                <div class="downvote-comment <%= ratings.some(r => r.comment_id === comment.id && r.rating === -1) ? 'on' : '' %>" data-commentid="<%= comment.id %>">
                    <svg xmlns="http://www.w3.org/2000/svg" class="icon icon-tabler icon-tabler-arrow-big-down-filled" width="28" height="28" viewBox="0 0 24 24" stroke-width="1.5" stroke="#2c3e50" fill="none" stroke-linecap="round" stroke-linejoin="round">
                    <path stroke="none" d="M0 0h24v24H0z" fill="none"/>
                    <path d="M10 2l-.15 .005a2 2 0 0 0 -1.85 1.995v6.999l-2.586 .001a2 2 0 0 0 -1.414 3.414l6.586 6.586a2 2 0 0 0 2.828 0l6.586 -6.586a2 2 0 0 0 .434 -2.18l-.068 -.145a2 2 0 0 0 -1.78 -1.089l-2.586 -.001v-6.999a2 2 0 0 0 -2 -2h-4z" stroke-width="0" fill="currentColor" />
                    </svg>
                </div>
            </div>

            <div class="comment-body">
                <div class="comment-title">
                    <a href="/user/profile/<%= comment.creator_id %>" class=""><%= comment.creator_name %></a>&nbsp;
                    <span class="comment-score"><%= comment.rating %> <%= Math.abs(parseInt(comment.rating)) === 1 ? 'point' : 'points' %></span>&nbsp;
                    <time datetime="<%= comment.datetime %>" class="timestamp"><%= timeSince(comment.datetime) %> ago</time>
                </div>
                <div class="comment-text" id="comment-text-<%= comment.id %>">
                    <%= comment.text %>
                </div>
                <form class="comment-edit-textarea" id="comment-edit-<%= comment.id %>" style="display: none;" method="post" action="/comments/edit/<%= comment.id %>">
                    <input type="hidden" name="postId" value="<%= comment.post_id %>">
                    <textarea id="text" name="text" rows="7" cols="85"><%= comment.text %></textarea><br>
                    <input class="uploadbutton" type="submit" value="save">
                </form>
                <ul class="comment-buttons">
                    <% if(parseInt(req.userId) === parseInt(req.params.id)) { %>
                    <li class="delete-button"><a class="login-required" href="/comments/delete/<%= comment.id %>">delete</a></li>
                    <li class="edit-button"><a class="login-required" href="#" onclick="editComment('<%= comment.id %>')">edit</a></li>
                    <% } %>
                </ul>
            </div>
        </div>
    </div>
    <% } %>
    <div>
    <% if(page > 1 ) { %>
    <button class="uploadbutton" onclick="window.location.href='/user/profile/<%= user.id %>?tab=<%= tab %>&page=<%= parseInt(page) - 1 %>'">prev</button>
    <% } %>
    <% if(lastIndex < comments.length) { %>
    <button class="uploadbutton" onclick="window.location.href='/user/profile/<%= user.id %>?tab=<%= tab %>&page=<%= parseInt(page) + 1 %>'">next</button>
    <% } %>
    </div>
</div>
<% }
else if(tab === 'saved') { %>

<div>
    <%  
    const firstIndex = (page - 1) * pagelimit
    const lastIndex = firstIndex + pagelimit - 1

    for (let i = firstIndex; i <= lastIndex && i < saved.length; i++ ) { 
        const post = saved[i]
    %>
    <div class="post">
        <div class="voting-section">
            <div class="upvote <%= ratings.some(r => r.post_id === post.id && r.rating === 1) ? 'on' : '' %>" data-postid="<%= post.id %>">
                <svg xmlns="http://www.w3.org/2000/svg" class="icon icon-tabler icon-tabler-arrow-big-up-filled" width="28" height="28" viewBox="0 0 24 24" stroke-width="1.5" stroke="#2c3e50" fill="none" stroke-linecap="round" stroke-linejoin="round">
                <path stroke="none" d="M0 0h24v24H0z" fill="none"/>
                <path d="M10.586 3l-6.586 6.586a2 2 0 0 0 -.434 2.18l.068 .145a2 2 0 0 0 1.78 1.089h2.586v7a2 2 0 0 0 2 2h4l.15 -.005a2 2 0 0 0 1.85 -1.995l-.001 -7h2.587a2 2 0 0 0 1.414 -3.414l-6.586 -6.586a2 2 0 0 0 -2.828 0z" stroke-width="0" fill="currentColor" />
                </svg>
            </div>
            <div class="score"> <%= post.rating %> </div>
            <div class="downvote <%= ratings.some(r => r.post_id === post.id && r.rating === -1) ? 'on' : '' %>" data-postid="<%= post.id %>">
                <svg xmlns="http://www.w3.org/2000/svg" class="icon icon-tabler icon-tabler-arrow-big-down-filled" width="28" height="28" viewBox="0 0 24 24" stroke-width="1.5" stroke="#2c3e50" fill="none" stroke-linecap="round" stroke-linejoin="round">
                <path stroke="none" d="M0 0h24v24H0z" fill="none"/>
                <path d="M10 2l-.15 .005a2 2 0 0 0 -1.85 1.995v6.999l-2.586 .001a2 2 0 0 0 -1.414 3.414l6.586 6.586a2 2 0 0 0 2.828 0l6.586 -6.586a2 2 0 0 0 .434 -2.18l-.068 -.145a2 2 0 0 0 -1.78 -1.089l-2.586 -.001v-6.999a2 2 0 0 0 -2 -2h-4z" stroke-width="0" fill="currentColor" />
                </svg>
            </div>
        </div>
        <a href="/posts/<%= post.id %>">
            <svg xmlns="http://www.w3.org/2000/svg" class="icon icon-tabler icon-tabler-article" width="52" height="52" viewBox="0 0 24 24" stroke-width="1.5" stroke="#9e9e9e" fill="none" stroke-linecap="round" stroke-linejoin="round">
            <path stroke="none" d="M0 0h24v24H0z" fill="none"/>
            <path d="M3 4m0 2a2 2 0 0 1 2 -2h14a2 2 0 0 1 2 2v12a2 2 0 0 1 -2 2h-14a2 2 0 0 1 -2 -2z" />
            <path d="M7 8h10" />
            <path d="M7 12h10" />
            <path d="M7 16h10" />
            </svg>
        </a>
        <div class="post-body">
            <p class="post-title"> <a class="title-link login-required" href="/posts/<%= post.id %>"><%= post.title %></a> </p>
            <p class="post-tags">submitted
                <time datetime="<%= post.datetime %>" class="timestamp"><%= timeSince(post.datetime) %> ago</time> by 
                <a href="/user/profile/<%= post.creator_id %>" class="author login-required"><%= post.creator_name %></a> to
                <a href="/subs/<%= post.sub_id %>" class="author login-required">c/<%= post.sub_name %></a>
            </p>
            <ul class="post-buttons">
                <li class="comments"><a class="login-required" href="/posts/<%= post.id %>"><%= comments.filter(c => c.post_id === post.id).length %> comments</a></li>
                <li class="save-button"><a class="login-required" href="/posts/save/<%= post.id %>">save</a></li>
                <% if(parseInt(req.userId) === parseInt(post.creator_id)) { %>
                <li class="edit-button"><a class="login-required" href="/posts/delete/<%= post.id %>">delete</a></li>
                <li class="delete-button"><a class="login-required" href="/posts/edit/<%= post.id %>">edit</a></li>
                <% } %>
            </ul>
        </div>
    </div>
    <% } %>
    <div>
    <% if(page > 1 ) { %>
    <button class="uploadbutton" onclick="window.location.href='/user/profile/<%= user.id %>?tab=<%= tab %>&page=<%= parseInt(page) - 1 %>'">prev</button>
    <% } %>
    <% if(lastIndex < posts.length) { %>
    <button class="uploadbutton" onclick="window.location.href='/user/profile/<%= user.id %>?tab=<%= tab %>&page=<%= parseInt(page) + 1 %>'">next</button>
    <% } %>
    </div>
</div>

<% } %>


<% function timeSince(date) {
  var seconds = Math.floor((new Date() - date) / 1000)
  var interval = seconds / 31536000

  if (interval > 1) {
      if (interval < 2) {
          return Math.floor(interval) + " year"
      }
      return Math.floor(interval) + " years"
  }

  interval = seconds / 2592000
  if (interval > 1) {
      if (interval < 2) {
          return Math.floor(interval) + " month"
      }
      return Math.floor(interval) + " months"
  }

  interval = seconds / 86400
  if (interval > 1) {
      if (interval < 2) {
          return Math.floor(interval) + " day"
      }
      return Math.floor(interval) + " days"
  }

  interval = seconds / 3600
  if (interval > 1) {
      if (interval < 2) {
          return Math.floor(interval) + " hour"
      }
      return Math.floor(interval) + " hours"
  }

  interval = seconds / 60
  if (interval > 1) {
      if (interval < 2) {
          return Math.floor(interval) + " minute"
      }
      return Math.floor(interval) + " minutes"
  }

  return Math.floor(seconds) + " seconds"
} %>


<script>
for(const btn of document.querySelectorAll('.upvote')) {
    btn.addEventListener('click', async (event) => {
        event.currentTarget.classList.toggle('on')
        const postId = btn.getAttribute('data-postid')
        await fetch('/votes/ratepost', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json'
            },
            body: JSON.stringify({
                postId: postId,
                rating: 1
            })
        })
        location.reload()
    })
}
for(const btn of document.querySelectorAll('.downvote')) {
    btn.addEventListener('click', async (event) => {
        event.currentTarget.classList.toggle('on')
        const postId = btn.getAttribute('data-postid')
        await fetch('/votes/ratepost', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json'
            },
            body: JSON.stringify({
                postId: postId,
                rating: -1
            })
        })
        location.reload()
    })
}
for(const btn of document.querySelectorAll('.upvote-comment')) {
    btn.addEventListener('click', async (event) => {
        event.currentTarget.classList.toggle('on')
        const commentId = btn.getAttribute('data-commentid')
        await fetch('/votes/ratecomment', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json'
            },
            body: JSON.stringify({
                commentId: commentId,
                rating: 1
            })
        })
        location.reload()
    })
}
for(const btn of document.querySelectorAll('.downvote-comment')) {
    btn.addEventListener('click', async (event) => {
        event.currentTarget.classList.toggle('on')
        const commentId = btn.getAttribute('data-commentid')
        await fetch('/votes/ratecomment', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json'
            },
            body: JSON.stringify({
                commentId: commentId,
                rating: -1
            })
        })
        location.reload()
    })
}
function editComment(commentId) {
    const commentText = document.getElementById(`comment-text-${commentId}`)
    const commentEdit = document.getElementById(`comment-edit-${commentId}`)
    commentText.style.display = 'none'
    commentEdit.style.display = 'block'
}
</script>